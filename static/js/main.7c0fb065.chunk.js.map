{"version":3,"sources":["components/common/TextError.tsx","components/common/FormItem.tsx","components/ModalWindow/ModalWindow.tsx","components/MainPage/AddForm.tsx","components/MainPage/MainPage.tsx","App.tsx","index.tsx"],"names":["TextError","props","className","children","FormItem","itemId","placeholder","itemType","itemName","itemLabel","important","errors","htmlFor","name","component","id","type","ModalWindow","isActive","AddForm","pracownicy","setPracownicy","setIsActive","validationSchema","Yup","imie","min","required","nazwisko","dzial","wynagrodzenieKwota","wynagrodzenieWaluta","initialValues","onSubmit","values","resetForm","isValid","dirty","touched","onClick","disabled","MainPage","useState","mojeDzialy","setMojeDzialy","dzialSalary","setDzialSalary","minValue","setMinValue","maxValue","setMaxValue","searchText","setSearchText","helpList","setHelpList","generalCount","forEach","item","useEffect","helpArray","pracownik","push","filter","pos","indexOf","helpObj","i","length","key","hasOwnProperty","helpArr","addDzial","searchValue","toLowerCase","search","searchTitle","salaryFilter","value","onChange","e","target","preventDefault","formData","elem","checked","helpDzialy","showArray","dzialFilter","map","style","marginLeft","paddingLeft","index","Date","now","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c0fb065.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './textError.scss'\r\n\r\nconst TextError: React.FC = (props)=> {\r\n    return <div className='d-flex justify-content-start error'>{props.children}</div>\r\n}\r\n\r\nexport default TextError","import React from 'react';\r\nimport {ErrorMessage, Field} from 'formik';\r\nimport TextError from './TextError';\r\nimport './textError.scss'\r\n\r\ntype FormItemPropsType = {\r\n    itemId: string\r\n    placeholder: string\r\n    itemType: string\r\n    itemName: string\r\n    itemLabel: string\r\n    important: boolean\r\n    errors: any\r\n}\r\n\r\nconst FormItem: React.FC<FormItemPropsType> = ({itemId, placeholder, itemType, itemName, itemLabel, important, errors}) => {\r\n    return (\r\n        <div className=\"mb-1\">\r\n            <label htmlFor={itemId} className=\"form-label text-white d-flex justify-content-start\">\r\n                {itemLabel} {important ? <span className='error'>*</span> : ''}\r\n            </label>\r\n            <ErrorMessage name={itemName} component={TextError}/>\r\n            <Field className='form-control' id={itemId} placeholder={placeholder} type={itemType} name={itemName}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormItem","import React, {FC} from \"react\";\r\nimport './modalWindow.scss'\r\n\r\ntype ModalWindowType = {\r\n    isActive: boolean\r\n}\r\n\r\nexport const ModalWindow: FC<ModalWindowType> = ({children, isActive}) => {\r\n    return (\r\n        <div className={`modalWindow ${isActive ? 'active' : ''}`}>\r\n            <div className='container-fluid'>\r\n                <div className='row d-flex justify-content-center'>\r\n                    <div className='modalContent col-md-4 col-xl-5'>\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Form, Formik} from \"formik\";\r\nimport FormItem from \"../common/FormItem\";\r\nimport {ModalWindow} from \"../ModalWindow/ModalWindow\";\r\nimport * as Yup from \"yup\";\r\nimport {pracownicyType} from \"./MainPage\";\r\n\r\ntype  AddFormType = {\r\n    isActive: boolean\r\n    pracownicy: Array<pracownicyType>\r\n    setPracownicy: (value: any) => void\r\n    setIsActive: (value: boolean) => void\r\n}\r\n\r\nexport const AddForm: React.FC<AddFormType> = ({isActive, pracownicy, setPracownicy, setIsActive}) => {\r\n\r\n    const validationSchema = Yup.object({\r\n        imie: Yup.string().min(2, 'Imie nie może być krótszy niż dwa symbole')\r\n            .required('Imie jest obowiązkowe'),\r\n        nazwisko: Yup.string().min(2, 'Nazwisko nie może być krótszy niż dwa symbole')\r\n            .required('Nazwisko jest obowiązkowe'),\r\n        dzial: Yup.string().min(2, 'Dział nie może być krótszy niż dwa symbole')\r\n            .required('Dział jest obowiązkowy'),\r\n        wynagrodzenieKwota: Yup.string().min(2, 'Wynagrodzenie nie może być krótszy niż dwa symbole')\r\n            .required('Wynagrodzenie jest obowiązkowe'),\r\n        wynagrodzenieWaluta: Yup.string().min(2, 'Waluta nie może być krótszy niż dwa symbole')\r\n            .required('Waluta jest obowiązkowa')\r\n    })\r\n\r\n    return (\r\n        <ModalWindow isActive={isActive}>\r\n            <Formik\r\n                initialValues={{imie: \"\", nazwisko: \"\", dzial: \"\", wynagrodzenieKwota: \"\", wynagrodzenieWaluta: \"\"}}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, {resetForm} ) => {\r\n                    setPracownicy([...pracownicy, values])\r\n                    resetForm({})\r\n                    setIsActive(false)\r\n                }}\r\n            >\r\n                {({ isValid, dirty, errors, touched }) => (\r\n                    <Form className='d-flex flex-column m-5 mt-3'>\r\n                        <h6 className='text-white'><span className='textRed'>*</span> Means that the field is required !</h6>\r\n                        <FormItem itemId='Imie' placeholder='Imie' itemType='text'\r\n                                  itemName='imie' itemLabel='Imię' important={true} errors={errors}/>\r\n                        <FormItem itemId='Nazwisko' placeholder='Nazwisko' itemType='text'\r\n                                  itemName='nazwisko' itemLabel='Nazwisko' important={true} errors={errors}/>\r\n                        <FormItem itemId='Dzial' placeholder='Dział' itemType='text'\r\n                                  itemName='dzial' itemLabel='Dział' important={true} errors={errors}/>\r\n                        <FormItem itemId='Wynagrodzenie' placeholder='Wynagrodzenie' itemType='text'\r\n                                  itemName='wynagrodzenieKwota' itemLabel='Wynagrodzenie' important={true} errors={errors}/>\r\n                        <FormItem itemId='Waluta' placeholder='Waluta' itemType='text'\r\n                                  itemName='wynagrodzenieWaluta' itemLabel='Waluta' important={true} errors={errors}/>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <button type=\"button\" onClick={() => setIsActive(false)} className=\"btn btn-danger mt-3\">Zamknij</button>\r\n                            <button type=\"submit\" disabled={!isValid || !dirty} className=\"btn btn-success mt-3\">Submit</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </ModalWindow>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport './mainPage.scss'\r\nimport {AddForm} from \"./AddForm\";\r\n\r\nexport type pracownicyType = {\r\n    imie: string\r\n    nazwisko: string\r\n    dzial: string\r\n    wynagrodzenieKwota: string\r\n    wynagrodzenieWaluta: string\r\n}\r\n\r\nexport const MainPage = () => {\r\n\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [mojeDzialy, setMojeDzialy] = useState([])\r\n    const [dzialSalary, setDzialSalary] = useState([])\r\n    const [minValue, setMinValue] = useState('')\r\n    const [maxValue, setMaxValue] = useState('')\r\n    const [searchText, setSearchText] = useState<string>('')\r\n    const [helpList, setHelpList] = useState<Array<pracownicyType>>([])\r\n    const [pracownicy, setPracownicy] = useState<Array<pracownicyType>>([\r\n        {\r\n            imie: \"Jan\",\r\n            nazwisko: \"Kowalski\",\r\n            dzial: \"IT\",\r\n            wynagrodzenieKwota: \"3000\",\r\n            wynagrodzenieWaluta: \"PLN\"\r\n        },\r\n        {\r\n            imie: \"Anna\",\r\n            nazwisko: \"Bąk\",\r\n            dzial: \"Administracja\",\r\n            wynagrodzenieKwota: \"2400.50\",\r\n            wynagrodzenieWaluta: \"PLN\"\r\n        },\r\n        {\r\n            imie: \"Paweł\",\r\n            nazwisko: \"Zabłocki\",\r\n            dzial: \"IT\",\r\n            wynagrodzenieKwota: \"3300\",\r\n            wynagrodzenieWaluta: \"PLN\"\r\n        },\r\n        {\r\n            imie: \"Tomasz\",\r\n            nazwisko: \"Osiecki\",\r\n            dzial: \"Administracja\",\r\n            wynagrodzenieKwota: \"2100\",\r\n            wynagrodzenieWaluta: \"PLN\"\r\n        },\r\n        {\r\n            imie: \"Iwona\",\r\n            nazwisko: \"Leihs-Gutowska\",\r\n            dzial: \"Handlowiec\",\r\n            wynagrodzenieKwota: \"3100\",\r\n            wynagrodzenieWaluta: \"PLN\"\r\n        },\r\n    ])\r\n\r\n    let generalCount = 0\r\n    pracownicy.forEach((item) => {\r\n        // @ts-ignore\r\n        generalCount = generalCount + +item.wynagrodzenieKwota\r\n    })\r\n\r\n    const searchTitle = (searchValue: string) => {\r\n        let helpArray = pracownicy\r\n        helpArray = helpArray.filter((item) => {\r\n            return item.imie.toLowerCase().search(searchValue.toLowerCase()) !== -1\r\n        })\r\n        setHelpList(helpArray)\r\n    }\r\n\r\n    const addDzial = () => {\r\n        let helpArray = [] as any\r\n        pracownicy.forEach((pracownik) => {\r\n            helpArray.push(pracownik.dzial)\r\n        })\r\n        // @ts-ignore\r\n        helpArray = helpArray.filter(function (item, pos) {\r\n            return helpArray.indexOf(item) === pos;\r\n        })\r\n        setMojeDzialy(helpArray)\r\n\r\n        const helpObj = {}\r\n        for (let i = 0; i < helpArray.length; ++i) {\r\n            // @ts-ignore\r\n            helpObj[helpArray[i]] = 0\r\n        }\r\n\r\n        pracownicy.forEach((item) => {\r\n            for (let key in helpObj) {\r\n                if (helpObj.hasOwnProperty(key)) {\r\n                    if (item.dzial === key) {\r\n                        // @ts-ignore\r\n                        helpObj[key] += +item.wynagrodzenieKwota\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        let helpArr = []\r\n        for (let key in helpObj) {\r\n            if (helpObj.hasOwnProperty(key)) {\r\n                // @ts-ignore\r\n                // helpArr.push({[key]: helpObj[key]})\r\n                helpArr.push(`${[key]}: ${helpObj[key]}`)\r\n\r\n            }\r\n        }\r\n\r\n        // @ts-ignore\r\n        setDzialSalary(helpArr)\r\n    }\r\n\r\n    const salaryFilter = () => {\r\n        let helpArray = pracownicy\r\n        if (+minValue > 0 && +maxValue > 0) {\r\n            helpArray = helpArray.filter((item) => {\r\n                if (+item.wynagrodzenieKwota >= +minValue && +item.wynagrodzenieKwota <= +maxValue) {\r\n                    return item\r\n                }\r\n            })\r\n            setHelpList(helpArray)\r\n        } else if (+minValue > 0) {\r\n            helpArray = helpArray.filter((item) => {\r\n                if (+item.wynagrodzenieKwota >= +minValue) {\r\n                    return item\r\n                }\r\n            })\r\n            setHelpList(helpArray)\r\n        } else if (+maxValue > 0) {\r\n            helpArray = helpArray.filter((item) => {\r\n                if (+item.wynagrodzenieKwota <= +maxValue) {\r\n                    return item\r\n                }\r\n            })\r\n            setHelpList(helpArray)\r\n        } else {\r\n            setHelpList(helpArray)\r\n        }\r\n    }\r\n\r\n    const dzialFilter = (formData: any) => {\r\n        let helpArray = pracownicy\r\n        let helpDzialy = []\r\n        // @ts-ignore\r\n        let showArray = []\r\n        for (let key in formData) {\r\n            if (formData.hasOwnProperty(key)) {\r\n                if (formData[key] === true) {\r\n                    helpDzialy.push(key)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (helpDzialy.length !== 0) {\r\n            helpDzialy.forEach((dzial) => {\r\n                helpArray.filter((item) => {\r\n                    if (item.dzial === dzial) {\r\n                        showArray.push(item)\r\n                    }\r\n                })\r\n            })\r\n            // @ts-ignore\r\n            setHelpList(showArray)\r\n        } else {\r\n            setHelpList(pracownicy)\r\n        }\r\n    }\r\n\r\n    const getCheckbox = (e: any) => {\r\n        e.preventDefault()\r\n        const formData = {}\r\n        mojeDzialy.forEach((elem) => {\r\n            // @ts-ignore\r\n            formData[elem] = e.target[elem].checked\r\n        })\r\n        dzialFilter(formData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setHelpList(pracownicy)\r\n        addDzial()\r\n    }, [pracownicy])\r\n\r\n    useEffect(() => {\r\n        searchTitle(searchText)\r\n    }, [searchText])\r\n\r\n    useEffect(() => {\r\n        salaryFilter()\r\n    }, [minValue, maxValue])\r\n\r\n    return (\r\n        <div className='mainPage'>\r\n            <div className='container-fluid'>\r\n\r\n                <AddForm isActive={isActive} setIsActive={setIsActive} pracownicy={pracownicy}\r\n                         setPracownicy={setPracownicy}/>\r\n\r\n                <div className='row mainPageContent text-white'>\r\n                    <div className='col-12'>\r\n                        <div className='col-12 d-md-flex justify-content-between'>\r\n                            <div className='col-md-2 d-flex align-items-end'>\r\n                                <input value={searchText} className='searchInput' type='text' placeholder='Search'\r\n                                       onChange={(e) => {\r\n                                           setSearchText(e.target.value)\r\n                                       }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='col-md-3 d-flex align-items-end'>\r\n                                <div>od:</div>\r\n                                <input value={minValue} className='searchInput' type='number' placeholder='Search'\r\n                                       onChange={(e) => {\r\n                                           setMinValue(e.target.value)\r\n                                       }}\r\n                                />\r\n\r\n                                <div>do:</div>\r\n\r\n                                <input value={maxValue} className='searchInput' type='number' placeholder='Search'\r\n                                       onChange={(e) => {\r\n                                           setMaxValue(e.target.value)\r\n                                       }}\r\n                                />\r\n                            </div>\r\n\r\n                            <button type=\"button\" onClick={() => setIsActive(true)}\r\n                                    className=\"mt-2 col-md-2 btn btn-success\">Dodaj nowego pracownika\r\n                            </button>\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <form onSubmit={getCheckbox} className='d-flex align-items-center'>\r\n                                {mojeDzialy.map((dzial) => {\r\n                                    return (\r\n                                        <div key={dzial} style={{marginLeft: '30px'}}>\r\n                                            <input type=\"checkbox\" id={dzial} name={dzial} value={dzial}/>\r\n                                            <label style={{paddingLeft: '5px'}} htmlFor={dzial}>{dzial}</label>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                <div>\r\n                                    <button style={{marginLeft: '20px'}} type=\"submit\"\r\n                                            className=\"btn btn-success\">Sort\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 mt-3 d-flex justify-content-between align-items-center'>\r\n                        <div className='col-md-3 text-center text-warning'>Imię</div>\r\n                        <div className='col-md-3 text-center text-warning'>Nazwisko</div>\r\n                        <div className='col-md-3 text-center text-warning'>Dział</div>\r\n                        <div className='col-md-3 text-center text-warning'>Wynagrodzenie</div>\r\n                    </div>\r\n\r\n                    {helpList.map((item, index) => (\r\n                        <div key={index + Date.now()}\r\n                             className='col-12 d-flex justify-content-between align-items-center mainPageItem'>\r\n                            <div className='col-md-3 text-center'>{item.imie}</div>\r\n                            <div className='col-md-3 text-center'>{item.nazwisko}</div>\r\n                            <div className='col-md-3 text-center'>{item.dzial}</div>\r\n                            <div\r\n                                className='col-md-3 text-center'>{`${item.wynagrodzenieKwota} ${item.wynagrodzenieWaluta}`}</div>\r\n                        </div>\r\n                    ))}\r\n\r\n                    <div className='col-12 mainPageStatistics'>\r\n                        <div>Suma calkowita: {generalCount}</div>\r\n                        {dzialSalary.map((item, index) => (\r\n                            <div key={Date.now() + index}>{item}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {MainPage} from \"./components/MainPage/MainPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MainPage/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}